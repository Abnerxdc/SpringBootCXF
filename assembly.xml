<!--<assembly>-->
    <!--<id>bin</id>-->
    <!--&lt;!&ndash; 最终打包成一个用于发布的zip文件 &ndash;&gt;-->
    <!--<formats>-->
        <!--<format>zip</format>-->
    <!--</formats>-->

    <!--&lt;!&ndash; Adds dependencies to zip package under lib directory &ndash;&gt;-->
    <!--<dependencySets>-->
        <!--<dependencySet>-->
            <!--&lt;!&ndash;-->
               <!--不使用项目的artifact，第三方jar不要解压，打包进zip文件的lib目录-->
           <!--&ndash;&gt;-->
            <!--<useProjectArtifact>false</useProjectArtifact>-->
            <!--<outputDirectory>lib</outputDirectory>-->
            <!--<unpack>false</unpack>-->
        <!--</dependencySet>-->
    <!--</dependencySets>-->

    <!--<fileSets>-->
        <!--&lt;!&ndash; 把项目相关的说明文件，打包进zip文件的根目录 &ndash;&gt;-->
        <!--<fileSet>-->
            <!--<directory>${project.basedir}</directory>-->
            <!--<outputDirectory>/</outputDirectory>-->
            <!--<includes>-->
                <!--<include>README*</include>-->
                <!--<include>LICENSE*</include>-->
                <!--<include>NOTICE*</include>-->
            <!--</includes>-->
        <!--</fileSet>-->

        <!--&lt;!&ndash; 把项目的配置文件，打包进zip文件的config目录 &ndash;&gt;-->
        <!--<fileSet>-->
            <!--<directory>${project.basedir}\src\main\config</directory>-->
            <!--<outputDirectory>config</outputDirectory>-->
            <!--<includes>-->
                <!--<include>*.xml</include>-->
                <!--<include>*.properties</include>-->
            <!--</includes>-->
        <!--</fileSet>-->

        <!--&lt;!&ndash; 把项目的脚本文件目录（ src/main/scripts ）中的启动脚本文件，打包进zip文件的跟目录 &ndash;&gt;-->
        <!--<fileSet>-->
            <!--<directory>${project.build.scriptSourceDirectory}</directory>-->
            <!--<outputDirectory></outputDirectory>-->
            <!--<includes>-->
                <!--<include>startup.*</include>-->
            <!--</includes>-->
        <!--</fileSet>-->

        <!--&lt;!&ndash; 把项目的脚本文件（除了启动脚本文件），打包进zip文件的script目录 &ndash;&gt;-->
        <!--<fileSet>-->
            <!--<directory>${project.build.scriptSourceDirectory}</directory>-->
            <!--<outputDirectory></outputDirectory>-->
            <!--<includes>-->
                <!--<exclude>startup.*</exclude>-->
            <!--</includes>-->
        <!--</fileSet>-->

        <!--&lt;!&ndash; 把项目自己编译出来的jar文件，打包进zip文件的根目录 &ndash;&gt;-->
        <!--<fileSet>-->
            <!--<directory>${project.build.directory}</directory>-->
            <!--<outputDirectory></outputDirectory>-->
            <!--<includes>-->
                <!--<include>*.jar</include>-->
            <!--</includes>-->
        <!--</fileSet>-->
    <!--</fileSets>-->
<!--</assembly>-->

<!--下面这个可以直接用-->
<!--<assembly>-->
<assembly xmlns="http://maven.apache.org/plugins/maven-assembly-plugin/assembly/1.1.2"
          xmlxs:xsi="http://www.w3.org/2001/XMLSchema-instance"
          xsi:schemaLocation="http://maven.apache.org/plugins/maven-assembly-plugin/assembly/1.1.2 http://maven.apache.org/xsd/assembly-1.1.2.xsd">
    <id>bin</id>
    <formats>
        <format>zip</format>
    </formats>

    <fileSets>
        <fileSet>
            <directory>${project.basedir}/conf</directory>
            <outputDirectory>/conf/</outputDirectory>
            <includes>
                <include>application.properties</include>
                <include>log4j.properties</include>
            </includes>
        </fileSet>
        <fileSet>
            <directory>${project.build.directory}</directory>
            <outputDirectory>/</outputDirectory>
            <includes>
                <include>${project.artifactId}.jar</include>
            </includes>
        </fileSet>
        <fileSet>
            <directory>${project.basedir}/scripts</directory>
            <outputDirectory>/</outputDirectory>
            <includes>
                <include>start.sh</include>
            </includes>
        </fileSet>
    </fileSets>

    <!--<fileSets>-->
        <dependencySets>
            <dependencySet>
                <outputDirectory>/lib</outputDirectory>
                <scope>system</scope>
                <unpack>false</unpack>
                <useProjectArtifact>false</useProjectArtifact>
            </dependencySet>
            <dependencySet>
                <outputDirectory>/lib</outputDirectory>
                <scope>runtime</scope>
                <unpack>false</unpack>
                <useProjectArtifact>false</useProjectArtifact>
            </dependencySet>
        </dependencySets>
    <!--</fileSets>-->

</assembly>